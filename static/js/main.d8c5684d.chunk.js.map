{"version":3,"sources":["Display.js","App.js","index.js"],"names":["Display","props","displayTurns","state","turns","answer","status","guessed","prize","type","onChange","handleChange","value","guess","className","onClick","handleClick","disabled","App","loading","bind","this","setState","fetch","numResponse","prizeResponse","text","numText","prizeTest","parseInt","event","preventDefault","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mQAqCeA,MAnCf,SAAiBC,GACf,IAAIC,EAAY,GAQhB,OANEA,EADED,EAAME,MAAMC,MAAQ,EACV,mBAAeH,EAAME,MAAMC,MAA3B,YACVH,EAAME,MAAMC,MAAQ,EAAI,QAAU,OADxB,UAIA,qDAAiDH,EAAME,MAAME,OAA7D,KAGZ,gCACE,6BAAKJ,EAAME,MAAMG,SACjB,uBACA,8BAAML,EAAME,MAAMI,SAAWL,IAC7B,6BACGD,EAAME,MAAMI,SAAZ,wBACkBN,EAAME,MAAMK,MAD9B,8BAGH,uBACEC,KAAK,SACLC,SAAUT,EAAMU,aAChBC,MAAOX,EAAME,MAAMU,QAErB,uBACA,wBACEC,UAAU,kBACVC,QAASd,EAAMe,YACfC,SAAUhB,EAAME,MAAMc,SAHxB,wBCsDSC,E,kDAvEb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDE,MAAQ,CACXgB,SAAS,EACTd,OAAQ,EACRQ,MAAO,EACPL,MAAO,EACPF,OAAQ,gCACRC,SAAS,EACTU,UAAU,EACVb,MAAO,GAET,EAAKO,aAAe,EAAKA,aAAaS,KAAlB,gBACpB,EAAKJ,YAAc,EAAKA,YAAYI,KAAjB,gBAbF,E,6LAiBjBC,KAAKC,SAAS,CAAEH,SAAS,I,SACCI,MAvB5B,mF,cAuBQC,E,gBACsBD,MAtB9B,kF,cAsBQE,E,gBACgBD,EAAYE,O,cAA5BC,E,iBACkBF,EAAcC,O,QAAhCE,E,OACNP,KAAKC,SAAS,CACZH,SAAS,EACTd,OAAQwB,SAASF,GACjBnB,MAA6B,IAAtBqB,SAASD,K,0IAIPE,GACXA,EAAMC,iBACNV,KAAKC,SAAS,CAAET,MAAOiB,EAAME,OAAOpB,U,kCAG1BkB,GACVA,EAAMC,iBACNV,KAAKC,UAAS,SAACnB,GAAD,MAAY,CACxBC,MAAOD,EAAMC,MAAQ,MAGE,IAArBiB,KAAKlB,MAAMC,OAAeiB,KAAKlB,MAAMU,QAAUQ,KAAKlB,MAAME,QAC5DgB,KAAKC,SAAS,CACZhB,OAAQ,YACRW,UAAU,IAIVI,KAAKlB,MAAMU,MAAQQ,KAAKlB,MAAME,OAChCgB,KAAKC,SAAS,CAAEhB,OAAQ,aACfe,KAAKlB,MAAMU,MAAQQ,KAAKlB,MAAME,OACvCgB,KAAKC,SAAS,CAAEhB,OAAQ,cAExBe,KAAKC,SAAS,CAAEhB,OAAQ,WAAYC,SAAS,EAAMU,UAAU,M,+BAK/D,OAAII,KAAKlB,MAAMgB,QACN,2CAGL,cAAC,EAAD,CACEhB,MAAOkB,KAAKlB,MACZQ,aAAcU,KAAKV,aACnBK,YAAaK,KAAKL,kB,GAjEViB,IAAMC,W,MCHxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d8c5684d.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Display(props) {\n  let displayTurns = ``;\n  if (props.state.turns > 0) {\n    displayTurns = `You have ${props.state.turns} ${\n      props.state.turns > 1 ? \"turns\" : \"turn\"\n    } left.`;\n  } else {\n    displayTurns = `Game over! The number you had to guess was ${props.state.answer}.`;\n  }\n  return (\n    <div>\n      <h1>{props.state.status}</h1>\n      <hr />\n      <h3>{!props.state.guessed && displayTurns}</h3>\n      <h3>\n        {props.state.guessed &&\n          `You have won $${props.state.prize}! Refresh to play again.`}\n      </h3>\n      <input\n        type=\"number\"\n        onChange={props.handleChange}\n        value={props.state.guess}\n      />\n      <br />\n      <button\n        className=\"btn btn-primary\"\n        onClick={props.handleClick}\n        disabled={props.state.disabled}\n      >\n        Guess!\n      </button>\n    </div>\n  );\n}\n\nexport default Display;\n","import React from \"react\";\nimport Display from \"./Display\";\n\nconst numApi =\n  \"https://www.random.org/integers/?num=1&min=1&max=100&col=1&base=10&format=plain\";\nconst prizeApi =\n  \"https://www.random.org/integers/?num=1&min=1&max=10&col=1&base=10&format=plain\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      answer: 0,\n      guess: 0,\n      prize: 0,\n      status: \"Guess a number from 1 to 100!\",\n      guessed: false,\n      disabled: false,\n      turns: 8,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const numResponse = await fetch(numApi);\n    const prizeResponse = await fetch(prizeApi);\n    const numText = await numResponse.text();\n    const prizeTest = await prizeResponse.text();\n    this.setState({\n      loading: false,\n      answer: parseInt(numText),\n      prize: parseInt(prizeTest) * 1000,\n    });\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    this.setState({ guess: event.target.value });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    this.setState((state) => ({\n      turns: state.turns - 1,\n    }));\n\n    if (this.state.turns === 1 && this.state.guess !== this.state.answer) {\n      this.setState({\n        status: \"Game over\",\n        disabled: true,\n      });\n    }\n\n    if (this.state.guess < this.state.answer) {\n      this.setState({ status: \"Too low!\" });\n    } else if (this.state.guess > this.state.answer) {\n      this.setState({ status: \"Too high!\" });\n    } else {\n      this.setState({ status: \"Correct!\", guessed: true, disabled: true });\n    }\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Display\n          state={this.state}\n          handleChange={this.handleChange}\n          handleClick={this.handleClick}\n        />\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}